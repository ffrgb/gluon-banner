#!/bin/sh
[ -f /etc/banner ] && cat /etc/banner
[ -e /tmp/.failsafe ] && cat /etc/banner.failsafe

export PATH=/usr/bin:/usr/sbin:/bin:/sbin
export HOME=$(grep -e "^${USER:-root}:" /etc/passwd | cut -d ":" -f 6)
export HOME=${HOME:-/root}
export PS1='\u@\h:\w\$ '

[ -x /bin/more ] || alias more=less
[ -x /usr/bin/vim ] && alias vi=vim || alias vim=vi

[ -z "$KSH_VERSION" -o \! -s /etc/mkshrc ] || . /etc/mkshrc

[ -x /usr/bin/arp ] || arp() { cat /proc/net/arp; }
[ -x /usr/bin/ldd ] || ldd() { LD_TRACE_LOADED_OBJECTS=1 $*; }

[ -n "$FAILSAFE" ] || {
        for FILE in /etc/profile.d/*.sh; do
                [ -e "$FILE" ] && . "$FILE"
        done
        unset FILE
}

echo    "########################################"
echo    "checking v4 - empty if v4 available "
# get ipv4 if not already there, checked simply by wget call
# but be aware that a meshing node may start fastd connections
wget -O /dev/null --quiet http://nirgendwo.de 2>/dev/null
if [ $? != 0 ]; then
 echo   "you may want IPv4, try :   udhcpc -i br-client -q -S -n"
fi
echo    "########################################"
echo -n "### IP :  " ; ifconfig |head|tail -n1
echo    "### from ssh : "$SSH_CONNECTION
echo -n "### known sshkeys : " ; echo -n $(grep -oE '[^ ]+$'  /etc/dropbear/authorized_keys)" - active : " ; cat /etc/dropbear/authorized_keys |grep -E "^ssh" |wc -l
echo -n "### uptime/load :  " ; uptime
echo    "########################################"
echo -n "### pubkey :  " ; /etc/init.d/fastd show_key mesh_vpn
echo -n "### firmware : " $(cat /lib/gluon/release) "  branch : " $(uci get autoupdater.settings.branch) "  autoupdater : " ; uci get autoupdater.settings.enabled
echo -n "### hardware :  " ; cat /tmp/sysinfo/model
echo    "########################################"
echo -n "### MoL:$(uci show|grep mesh_lan.auto|cut -d= -f2)"
echo -n  "   MoW:$(uci show|grep mesh_wan.auto|cut -d= -f2)"
echo     "   fastd:$(uci show|grep fastd.mesh_vpn.enabled|cut -d= -f2)"
echo -n "### Location:  $(uci show|grep .share_location=|cut -d= -f2)"
echo -n " lat:$(uci show|grep .latitude=|cut -d= -f2)"
echo -n " lon:$(uci show|grep .longitude=|cut -d= -f2)"
echo    " alt:$(uci show|grep .altitude=|cut -d= -f2)"
echo    "### contact :  $(uci show|grep contact|cut -d= -f2)"
echo    "########################################"
echo -n "### connected to this node  :    " ; batctl tl |grep W |wc -l
echo -n "### number of nodes (inkl SN) :  " ; batctl o | wc -l
echo -n "### number of total clients :    " ; batctl tg |grep W |wc -l
echo -n "### number of GW : " $(batctl gwl -H |wc -l) " - connected to "; batctl gwl| grep = 
echo    "########################################"
echo -n "### /sys/class/net/bat0/mesh/hop_penalty :    "; echo $(cat /sys/class/net/bat0/mesh/hop_penalty)
echo    "### batctl gw :     " $(batctl gw)
echo    "####logread#############################"
logread |tail -n4 |head -n3
echo    "########################################"

# just some handy aliases
alias cd..="cd .."
alias myip="echo -n 'ifconfig' && ifconfig |head|tail -n1 && echo 'from ssh : ' $SSH_CONNECTION"
alias status="source /etc/profile"
alias ll="ls -la"
PS1='$? ${debian_chroot:+($debian_chroot)}\[\033[01;33m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

